name: CI/CD to AKS

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: sampleapp

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout code
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Login to Azure
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # 3. ACR Login
    - name: Login to Azure Container Registry
      run: az acr login --name ${{ secrets.ACR_NAME }}

    # 4. Build & Push Docker image
    - name: Build and Push Docker Image
      run: |
        IMAGE_TAG=${{ github.sha }}
        docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:$IMAGE_TAG .
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:$IMAGE_TAG
        echo "IMAGE=${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:$IMAGE_TAG" >> $GITHUB_ENV

    # 5. Get AKS credentials
    - name: Get AKS Credentials
      run: az aks get-credentials --resource-group ${{ secrets.AKS_RG }} --name ${{ secrets.AKS_NAME }} --overwrite-existing

    # 6. Deploy to AKS
    - name: Deploy to AKS
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl set image deployment/nodejs-app nodejs-container=$IMAGE
        kubectl rollout status deployment/nodejs-app
        kubectl get services
